!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=10)}({10:function(e,t){var n=new class{constructor(){this.StorageObjects=null}getSetting(e,t){return void 0!==this.StorageObjects.get(e)?this.StorageObjects.get(e):void 0===t?"":t}setSetting(e,t){this.StorageObjects.set(e,t);var n={};n[e]=t,chrome.storage.local.set(n)}startup(){this.getSetting("FirstRun",!0)&&(this.setSetting("FirstRun",!1),this.openTab())}loadSettings(){return new Promise(e=>{chrome.storage.local.get(function(t){for(var n in window.NTInstance.StorageObjects=new Map,t)window.NTInstance.StorageObjects.set(n,t[n]);e(!0)})})}openTab(){chrome.tabs.create({url:""})}};window.NTInstance=n;const r=n.loadSettings();chrome.runtime.onStartup.addListener(function(){r.then(e=>{e&&n.startup()})}),chrome.runtime.onInstalled.addListener(function(){chrome.tabs.create({url:chrome.extension.getURL("newtab/newtab.html")})}),chrome.tabs.onCreated.addListener(function(e){"chrome://newtab/"==e.url&&chrome.tabs.update(e.id,{url:chrome.extension.getURL("newtab/newtab.html")})}),chrome.runtime.onMessage.addListener(function(e,t,r){var o={};switch(e.task){case"checkFirstRun":var i=n.getSetting("FirstRun",!0);o.firstRun=i,i&&(r(o),n.setSetting("FirstRun",!1)),r(o)}}),chrome.browserAction.onClicked.addListener(function(){n.openTab()})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,